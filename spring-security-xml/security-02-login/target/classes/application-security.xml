<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security.xsd">


    <!--
         http元素下的form-login元素是用来定义表单登录信息的
            login-page：该属性用来指定登录页面
            login-processing-url：表示登录时提交的地址，默认是“/j-spring-security-check”。
                    这个只是Spring Security用来标记登录页面使用的提交地址，真正关于登录这个请求是不需要用户自己处理的。
            username-parameter：表示登录时用户名使用的是哪个参数，默认是“j_username”
            password-parameter：表示登录时密码使用的是哪个参数，默认是“j_password”
            default-target-url：表示登录(认证)成功之后指定跳转的界面
            always-use-default-target：配合default-target-url一起使用，
            authentication-failure-url：表示认证失败之后，需要跳转的界面，该界面需要提供访问权限
            authentication-success-handler-ref：定义认证成功之后的处理器
            authentication-failure-handler-ref：定义认证失败之后的处理器
    -->
    <security:http auto-config="true">

        <security:form-login login-page="/login.jsp" login-processing-url="/login.do"
                             username-parameter="username"
                             password-parameter="password"
                             authentication-success-handler-ref="authSuccessHandler"
                             authentication-failure-handler-ref="authFailureHandler"/>
        <!--
            注意事项，登录界面应该可以被所有人访问，但是下面那段配置需要所有界面具备“ROLE_USER”权限才可以访问
            这就形成了一个死循环。通过指定登录界面的的访问权限为“ROLE_ANONYMOUS”或者“IS_AUTHENTICATED_ANONYMOUSLY”
            可以达到单独开放登录界面的访问权限效果
         -->
        <security:intercept-url pattern="/login.jsp" access="ROLE_ANONYMOUS"/>
        <!--所有界面需要具备“ROLE_USE”权限才可以访问-->
        <security:intercept-url pattern="/**" access="ROLE_USER"/>
    </security:http>

    <bean id="authSuccessHandler" class="com.github.security.AuthenticationSuccessHandlerImpl"/>
    <bean id="authFailureHandler" class="com.github.security.AuthenticationFailureHandlerImpl"/>


    <!--
       通过user-service的properties属性来指定用户信息
    -->
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service properties="/WEB-INF/user.properties"/>
        </security:authentication-provider>
    </security:authentication-manager>


</beans>